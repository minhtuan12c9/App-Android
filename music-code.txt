package com.example.activityapp;

import androidx.appcompat.app.AppCompatActivity;
import androidx.constraintlayout.widget.ConstraintLayout;

import android.content.Intent;
import android.graphics.drawable.Drawable;
import android.media.MediaPlayer;
import android.os.Bundle;
import android.util.Log;
import android.view.View;
import android.view.animation.Animation;
import android.view.animation.AnimationUtils;
import android.widget.Button;
import android.widget.ImageView;
import android.widget.TextView;
import android.widget.Toast;

import java.util.Random;

public class MusicActivity extends AppCompatActivity {
    private int[] songs = {R.raw.diu_dang_em_den, R.raw.bat_tinh_yeu_len, R.raw.em_dong_y,
            R.raw.mong_mot_ngay_anh_nho_den_em, R.raw.de_toi_om_em_bang_giai_dieu_nay};
    private String[] songNames = {"Dịu dàng em đến", "Bắt tình yêu lên", "Em đồng ý",
            "Mong một ngày anh nhớ đến em", "Để tôi ôm em bằng giai điệu này"};
    private int[] bgs = {R.drawable.bg1, R.drawable.bg2, R.drawable.bg3, R.drawable.bg4,
            R.drawable.bg5};
    private int songIndex = 0;
    private MediaPlayer player = null;
    private TextView name;
    private TextView status;
    private Random rand = new Random();
    private ConstraintLayout layoutMusic;
    private ImageView logo;

    private Animation anim;
    private Drawable playIcon;
    private Drawable pauseIcon;

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_music);

        Button btnStop = findViewById(R.id.btnStop);
        Button btnPrev = findViewById(R.id.btnPrev);
        Button btnPlayPaused = findViewById(R.id.btnPlayPaused);
        Button btnNext = findViewById(R.id.btnNext);
        Button btnClose = findViewById(R.id.btnClose);

        layoutMusic = findViewById(R.id.layoutMusic);
        logo = findViewById(R.id.logo);
        name = findViewById(R.id.name);
        status = findViewById(R.id.status);
        status.setVisibility(View.INVISIBLE);

        anim = AnimationUtils.loadAnimation(this, R.anim.rotate);
        playIcon = getResources().getDrawable(R.drawable.play_circle_regular_36);
        pauseIcon = getResources().getDrawable(R.drawable.pause_circle_regular_36);

        btnStop.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View v) {
                if(player != null){
                    player.stop();
                    player = null;
                    status.setVisibility(View.INVISIBLE);
                    btnPlayPaused.setCompoundDrawablesWithIntrinsicBounds(playIcon,
                            null, null, null);
                    logo.clearAnimation();
                }
            }
        });

        btnPrev.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View v) {
                if(player != null){
                    player.stop();
                }

                if(songIndex == 0){
                    songIndex = songs.length - 1;
                }else {
                    songIndex--;
                }
                player = MediaPlayer.create(MusicActivity.this, songs[songIndex]);
                name.setText(songNames[songIndex]);
                layoutMusic.setBackground(getResources().getDrawable(bgs[songIndex]));
                player.start();
                status.setText("Playing");
                btnPlayPaused.setCompoundDrawablesWithIntrinsicBounds(pauseIcon,
                        null, null, null);
                logo.startAnimation(anim);
            }
        });

        btnPlayPaused.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View v) {
                if(player == null){
                    songIndex = rand.nextInt(songs.length);
                    player = MediaPlayer.create(MusicActivity.this, songs[songIndex]);
                    name.setText(songNames[songIndex]);
                    layoutMusic.setBackground(getResources().getDrawable(bgs[songIndex]));
                }

                status.setVisibility(View.VISIBLE);
                if(player.isPlaying()){
                    player.pause();
                    int currentTime = player.getCurrentPosition();
                    status.setText("Paused - " + (currentTime / 1000) + "s");
                    btnPlayPaused.setCompoundDrawablesWithIntrinsicBounds(playIcon,
                            null, null, null);
                    logo.clearAnimation();
                }else {
                    player.start();
                    status.setText("Playing");
                    btnPlayPaused.setCompoundDrawablesWithIntrinsicBounds(pauseIcon,
                            null, null, null);

                    logo.startAnimation(anim);
                }
            }
        });

        btnNext.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View v) {
                if(player != null){
                    player.stop();
                }

                if(songIndex == songs.length - 1){
                    songIndex = 0;
                }else {
                    songIndex++;
                }
                player = MediaPlayer.create(MusicActivity.this, songs[songIndex]);
                name.setText(songNames[songIndex]);
                layoutMusic.setBackground(getResources().getDrawable(bgs[songIndex]));
                player.start();
                status.setText("Playing");
                btnPlayPaused.setCompoundDrawablesWithIntrinsicBounds(pauseIcon,
                        null, null, null);
                logo.startAnimation(anim);
            }
        });

        btnClose.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View v) {
                Intent iClose = new Intent(MusicActivity.this, MainActivity.class);
                startActivity(iClose);
                if(player != null){
                    player.stop();
                    player.release();
                }
            }
        });
    }
}